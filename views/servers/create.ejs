<head>
  <title><%= settings.name %></title>
  <link rel="icon" type="image/x-icon" href="../assets/favicon.png">
  <script src="https://cdn.tailwindcss.com"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://unpkg.com/@popperjs/core@2.10.1/dist/umd/popper.min.js"></script>

  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Ubuntu+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
</head>

<body class="bg-zinc-950 text-zinc-100 overflow-hidden" style="font-family: 'Inter', sans-serif;">
  <%
     let ram = 0;
     let disk = 0;
     let cpu = 0;
     let servers = pterodactyl.relationships.servers.data.length;
     for (let i = 0, len = pterodactyl.relationships.servers.data.length; i < len; i++) {
         ram = ram + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.memory == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.memory : 0);
         disk = disk + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.disk == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.disk : 0);
         cpu = cpu + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.cpu == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.cpu : 0);
     }
  %>
  <div class="flex h-screen overflow-hidden">
    <%- include('../components/navigation') %>
    <div class="flex flex-col flex-1 md:pl-64 overflow-hidden">
      <main class="flex-1 overflow-y-auto overflow-x-hidden">
        <div class="py-4 sm:py-6 overflow-hidden">
          <% /* Skeleton loader, lasts about 0.3s to let the page content load */ %>
          <%- include('../components/skeleton') %>
          <div class="hidden max-w-7xl mx-auto px-3 sm:px-6 md:px-8 w-full overflow-hidden" id="content">
            
            <!-- Page Header -->
            <div class="pt-2 sm:pt-6 md:pt-8">
              <div class="flex items-center mb-6">
                <div class="flex items-center justify-center w-12 h-12">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-7 h-7 text-zinc-400">
                    <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 9a.75.75 0 0 0-1.5 0v2.25H9a.75.75 0 0 0 0 1.5h2.25V15a.75.75 0 0 0 1.5 0v-2.25H15a.75.75 0 0 0 0-1.5h-2.25V9Z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div class="ml-4">
                  <h2 class="text-xl font-semibold text-zinc-100 tracking-tight">Deploy Server</h2>
                  <p class="text-sm text-zinc-400">Create a new server on the Panel.</p>
                </div>
              </div>
            </div>
            
            <!-- Error Alert -->
            <% if (req.query.err) { %>
            <div class="rounded-xl bg-red-900/20 border border-red-800/50 p-4 sm:p-6 mb-5">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-5 w-5 text-red-400">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div class="ml-3">
                  <h3 class="text-md font-medium tracking-tight text-red-200">An error was encountered</h3>
                  <div class="mt-1 text-sm text-red-300/70">
                    <p>Error code: <code class="bg-red-900/30 px-1.5 py-0.5 rounded-md text-red-200"><%= req.query.err %></code></p>
                  </div>
                </div>
              </div>
            </div>
            <% } %>
            
            <% if ((packages ? packages.ram : 0)/1024 + extraresources.ram/1024 - ram/1024 <= 0 || 
                   (packages ? packages.disk : 0)/1024 + extraresources.disk/1024 - disk/1024 <= 0 || 
                   (packages ? packages.cpu : 0)/100 + extraresources.cpu/100 - cpu/100 <= 0) { %>
            <!-- Insufficient Resources Message -->
            <div class="flex flex-col items-center justify-center py-12 sm:py-16">
              <div class="bg-amber-900/20 rounded-full p-4 mb-4">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10 text-amber-400">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                </svg>
              </div>
              <h3 class="text-lg font-semibold text-zinc-200 mb-2">Insufficient Resources</h3>
              <p class="text-zinc-400 text-center max-w-md mb-6">You don't have enough resources available to create a new server.</p>
              <a href="../servers" class="inline-flex items-center px-4 py-2 bg-zinc-800 hover:bg-zinc-700 text-zinc-200 text-sm font-medium rounded-lg transition-colors duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
                </svg>
                Back to Servers
              </a>
            </div>
            <% } else { %>
            <!-- Server Creation Form -->
            <div class="rounded-xl bg-zinc-900/70 border border-zinc-800/50 shadow-lg p-5 sm:p-6">
              <div class="space-y-6">
                <!-- Server Name -->
                <div>
                  <label for="name" class="block text-sm font-medium text-zinc-300 mb-1">Server Name</label>
                  <input type="text" id="name" placeholder="My Awesome Server" 
                         class="w-full sm:w-1/2 lg:w-1/3 bg-zinc-800/50 border border-zinc-700/50 rounded-lg px-4 py-2.5 text-zinc-200 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-indigo-500/50 transition">
                </div>
                
                <!-- Location -->
                <div>
                  <label for="location" class="block text-sm font-medium text-zinc-300 mb-3">Location</label>
                  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3">
                    <% for (let [name, value] of Object.entries(settings.api.client.locations)) { %>
                    <div class="relative">
                      <input type="radio" id="location-<%= name %>" name="location" value="<%= value.id %>" class="peer sr-only" <%= Object.keys(settings.api.client.locations)[0] === name ? 'checked' : '' %>>
                      <label for="location-<%= name %>" class="flex items-center p-4 bg-zinc-800/50 border border-zinc-700/50 rounded-lg cursor-pointer transition-all hover:bg-zinc-800 peer-checked:border-indigo-500/50 peer-checked:bg-indigo-900/20">
                        <div class="flex items-center justify-center w-8 h-8 mr-3 rounded-full bg-zinc-700/50 text-zinc-300 peer-checked:bg-indigo-900/50 peer-checked:text-indigo-300">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4">
                            <path fill-rule="evenodd" d="m11.54 22.351.07.04.028.016a.76.76 0 0 0 .723 0l.028-.015.071-.041a16.975 16.975 0 0 0 1.144-.742 19.58 19.58 0 0 0 2.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 0 0-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 0 0 2.682 2.282 16.975 16.975 0 0 0 1.145.742ZM12 13.5a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" clip-rule="evenodd" />
                          </svg>
                        </div>
                        <div>
                          <span class="block font-medium text-zinc-200 peer-checked:text-indigo-300"><%= value.name %></span>
                          <span class="block text-xs text-zinc-400 mt-1 peer-checked:text-indigo-200/70"><%= value.description || 'Server location' %></span>
                        </div>
                      </label>
                    </div>
                    <% } %>
                  </div>
                </div>
                
                <!-- Software -->
                <div class="mt-6">
                  <label class="block text-sm font-medium text-zinc-300 mb-3">Software</label>
                  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3">
                    <% for (let [name, value] of Object.entries(settings.api.client.eggs)) { %>
                    <div class="relative">
                      <input type="radio" id="egg-<%= name %>" name="egg" value="<%= name %>" class="peer sr-only" <%= Object.keys(settings.api.client.eggs)[0] === name ? 'checked' : '' %>>
                      <label for="egg-<%= name %>" 
                             class="group flex items-center p-4 bg-zinc-800/50 border border-zinc-700/50 rounded-lg cursor-pointer transition-all hover:bg-zinc-800 peer-checked:border-indigo-500/50 peer-checked:bg-indigo-900/20">
                        <div class="flex items-center justify-center w-10 h-10 mr-3 rounded-lg bg-zinc-900/50 border border-zinc-700/50 text-zinc-300 group-hover:bg-zinc-900 peer-checked:bg-indigo-900/50 peer-checked:border-indigo-500/50 peer-checked:text-indigo-300 transition-all">
                          <% if (value.logo) { %>
                            <img src="<%= value.logo %>" alt="<%= value.display %>" class="w-6 h-6 object-contain">
                          <% } else { %>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
                              <path fill-rule="evenodd" d="M2.25 6a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V6Zm3.97.97a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 0 1-1.06-1.06l.97-.97H5.25a.75.75 0 0 1 0-1.5h1.97l-.97-.97a.75.75 0 0 1 0-1.06Zm10.56 0a.75.75 0 0 1 0 1.06l-.97.97h1.97a.75.75 0 0 1 0 1.5h-1.97l.97.97a.75.75 0 1 1-1.06 1.06l-2.25-2.25a.75.75 0 0 1 0-1.06l2.25-2.25a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd" />
                            </svg>
                          <% } %>
                        </div>
                        <div class="flex-1">
                          <span class="block font-medium text-zinc-200 group-hover:text-zinc-100 peer-checked:text-indigo-300 transition-colors"><%= value.display %></span>
                          <% if (value.description) { %>
                            <span class="block text-xs text-zinc-400 mt-1 group-hover:text-zinc-300 peer-checked:text-indigo-200/70 transition-colors"><%= value.description %></span>
                          <% } %>
                        </div>
                        <div class="ml-4 flex items-center justify-center w-5 h-5 rounded-full border border-zinc-600 group-hover:border-zinc-500 peer-checked:border-indigo-500 peer-checked:bg-indigo-500 transition-all">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" 
                               class="w-3 h-3 text-transparent peer-checked:text-white transition-colors">
                            <path fill-rule="evenodd" d="M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z" clip-rule="evenodd" />
                          </svg>
                        </div>
                      </label>
                    </div>
                    <% } %>
                  </div>
                </div>
                
                <!-- Resources Section -->
                <div class="pt-4 border-t border-zinc-800/50">
                  <h3 class="text-md font-medium text-zinc-200 mb-4">Server Resources</h3>
                  
                  <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                    <!-- Memory -->
                    <div>
                      <label for="ram" class="block text-sm font-medium text-zinc-300 mb-1">Memory (GiB)</label>
                      <input type="text" id="ram" 
                             value="<%= (packages ? packages.ram : 0)/1024 + extraresources.ram/1024 - ram/1024 %>" 
                             class="w-full bg-zinc-800/50 border border-zinc-700/50 rounded-lg px-4 py-2.5 text-zinc-200 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-indigo-500/50 transition">
                    </div>
                    
                    <!-- Storage -->
                    <div>
                      <label for="disk" class="block text-sm font-medium text-zinc-300 mb-1">Storage (GiB)</label>
                      <input type="text" id="disk" 
                             value="<%= (packages ? packages.disk : 0)/1024 + extraresources.disk/1024 - disk/1024 %>" 
                             class="w-full bg-zinc-800/50 border border-zinc-700/50 rounded-lg px-4 py-2.5 text-zinc-200 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-indigo-500/50 transition">
                    </div>
                    
                    <!-- CPU -->
                    <div>
                      <label for="cpu" class="block text-sm font-medium text-zinc-300 mb-1">CPU Cores</label>
                      <input type="text" id="cpu" 
                             value="<%= (packages ? packages.cpu : 0)/100 + extraresources.cpu/100 - cpu/100 %>" 
                             class="w-full bg-zinc-800/50 border border-zinc-700/50 rounded-lg px-4 py-2.5 text-zinc-200 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-indigo-500/50 transition">
                    </div>
                  </div>
                </div>
                
                <!-- Submit Button -->
                <div class="pt-4">
                  <button onclick="submitForm()" class="inline-flex items-center px-5 py-2.5 bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium rounded-lg transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 focus:ring-offset-zinc-900">
                    <span id="contentWrapper" class="flex items-center">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 mr-2">
                        <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
                      </svg>
                      Create Server
                    </span>
                    <span id="loaderWrapper" style="display:none;" class="flex items-center">
                      <svg class="animate-spin h-4 w-4 text-white mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                      Creating...
                    </span>
                  </button>
                </div>
              </div>
            </div>
            <% } %>
            
          </div>
        </div>
      </main>
      <%- include('../components/footer') %>
    </div>
  </div>
  
  <script>
    async function submitForm() {
      const button = document.querySelector('button');
      const name = document.getElementById("name").value;
      const egg = document.querySelector('input[name="egg"]:checked')?.value;
      const ram = document.getElementById("ram").value;
      const disk = document.getElementById("disk").value;
      const cpu = document.getElementById("cpu").value;
      const location = document.querySelector('input[name="location"]:checked')?.value;

      // Validation
      if (!name) {
        alert('Please enter a server name');
        return;
      }
      if (!egg) {
        alert('Please select a server type');
        return;
      }
      if (!location) {
        alert('Please select a location');
        return;
      }
      if (!ram || !disk || !cpu) {
        alert('Please ensure all resource values are set');
        return;
      }

      try {
        // Disable button and show loader
        button.disabled = true;
        document.getElementById('contentWrapper').style.display = 'none';
        document.getElementById('loaderWrapper').style.display = 'flex';

        // Convert resources to correct units
        const ramMB = Math.floor(parseFloat(ram) * 1024);
        const diskMB = Math.floor(parseFloat(disk) * 1024);
        const cpuPct = Math.floor(parseFloat(cpu) * 100);

        // Redirect to create endpoint with proper parameters
        const params = new URLSearchParams({
          name: name,
          egg: egg,
          ram: ramMB,
          disk: diskMB,
          cpu: cpuPct,
          location: location
        });

        window.location.href = `/create?${params.toString()}`;
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while creating the server. Please try again.');
        
        // Reset button state
        button.disabled = false;
        document.getElementById('contentWrapper').style.display = 'flex';
        document.getElementById('loaderWrapper').style.display = 'none';
      }
    }
  </script>
</body>